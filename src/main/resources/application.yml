#在我们这个配置文件中能配置的东西，都存在一个固有的规律--->存在与之对应的xxxProperties--->被xxxAutoConfiguration装配
#即 xxxAutoConfiguration自动配置类：帮我们自动装配东西，存在默认值在xxxProperties中--->xxxProperties 与 配置文件(application.yml)进行绑定--->从而实现自定义配置！

#更该项目的端口号
server:
  port: 8081
# 可以通过 debug = true来查看哪些自动配置类生效了，哪些没有生效
#debug: true
spring:
  application:
    name: bootStudy
  datasource:
    url: jdbc:mysql://localhost:3306/practice?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    #Spring Boot 默认是不注入这些属性值的，需要自己绑定
    #druid 数据源专有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true

    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  # 关闭模板引擎缓存
  thymeleaf:
    cache: false

#整合mybatis
mybatis:
  type-aliases-package: com.spring.springbootstudy.entity #整合别名
  mapper-locations: classpath:mybatis/mapper/*.xml #mapper.xml 地址

